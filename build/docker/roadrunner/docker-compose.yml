version: '3.7'

networks:
    default:
        driver: bridge
    proxy:
        external: true
        name: https-proxy

volumes:
#    # this is for Native Linux (Ubuntu)
#    appVolume:
#        driver: local
#        driver_opts:
#            type: bind
#            device: ${PROJECT_FOLDER}

    # this is for MacOS
    demoProductVolume:
        driver: local
        driver_opts:
            type: nfs
            o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
            device: ":/System/Volumes/Data/$PWD/${PROJECT_FOLDER}"

services:
    roadrunner:
        #build: ./build
        image: devops/roadrunner:1.6.4
        #ports:
        #    - 8080:8080 # dont need to expose here since traefik will do forwarding
        volumes:
            - demoProductVolume:/app
        networks:
            proxy: {}     # road runner will communicate with the world (expose) through this network
            default: {}   # it will communicate with other internal services here
        labels:
            # https://docs.traefik.io/reference/dynamic-configuration/docker/
            # https://docs.traefik.io/routing/providers/docker/
            - traefik.enable=true # expose this container through traefik
            - traefik.http.services.demoProduct.loadbalancer.server.port=8080

            # http route, redirect to https
            # - traefik.http.routers.demoProduct_http.entrypoints=http
            # - traefik.http.routers.demoProduct_http.rule=Host(`demo.dev.mz`)
            # - traefik.http.routers.demoProduct_http.middlewares=force-https@file

            # https route
            - traefik.http.routers.demoProduct_https.entrypoints=https
            - traefik.http.routers.demoProduct_https.rule=Host(`demo.dev.mz`)
            - traefik.http.routers.demoProduct_https.tls=true
            - traefik.http.routers.demoProduct_https.service=demoProduct