image: laradock/workspace:latest-7.4

cache: &global_cache
  # https://docs.gitlab.com/ee/ci/caching/#sharing-caches-across-the-same-branch
  # jobs of each branch always use the same cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - code/node_modules/
    - code/vendor/
  #policy: pull-push

stages:
  - preparation
  - testing
  - security
  - package

list-files:
  stage: preparation
  image: registry.miczone.asia/devops/phpcli:7.4.11
  script:
    - pwd
    - echo $DOCKER_AUTH_CONFIG
    - ls -a

composer:
  stage: preparation
  script:
    - php -v
    - cd code && composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
  cache:
    # inherit all global cache settings
    <<: *global_cache

  artifacts:
      untracked: false
      expire_in: 30 days     
      paths:
          - code

unit_test:
  stage: testing
  dependencies:
    - composer
  script:
    - php -v
    #- sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak
    - cd code
    - ./bin/phpunit --version
    - ./bin/phpunit
    #- sudo cp /usr/local/etc/php/conf.d/docker-php-ext-xdebug.bak /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

# codestyle:
#   stage: testing
#   #image: lorisleiva/laravel-docker
#   script:
#     - phpcs --extensions=php code
#   dependencies: []

copypaste:
  stage: testing
  script:
    - test -f phpcpd.phar || curl -L https://phar.phpunit.de/phpcpd.phar -o phpcpd.phar
    - php phpcpd.phar code/ --min-lines=50
  dependencies: []
  cache:
    paths:
      - phpcpd.phar

sensiolabs:
  stage: security
  script:
    - test -d security-checker || git clone https://github.com/sensiolabs/security-checker.git
    - cd security-checker
    - composer install
    - php security-checker security:check ../code/composer.lock
  dependencies: []
  cache:
    paths:
      - security-checker/
  

build_image:
  stage: package
  script:
    - cd build/ci && docker build -t registry.miczone.asia/devops/demoapp:1.1.1 .
    - docker push registry.miczone.asia/devops/demoapp:1.1.1 
    
# deploy_production:
#   stage: deploy
#   script:
#     - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
#     - eval $(ssh-agent -s)
#     - ssh-add <(echo "$SSH_PRIVATE_KEY")
#     - mkdir -p ~/.ssh
#     - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

#     - ~/.composer/vendor/bin/envoy run deploy --commit="$CI_COMMIT_SHA"
#   environment:
#     name: production
#     url: http://192.168.1.1
#   when: manual
#   only:
#     - master      

# docker build:
#   script: docker build -t my-image:$CI_COMMIT_REF_SLUG .
# only:
#     refs:
#       - merge_requests
#     changes:
#       - Dockerfile
#       - service-one/**/*